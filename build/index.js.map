{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/edit.js","webpack:///./src/editor.scss","webpack:///./src/index.js","webpack:///./src/save.js","webpack:///external {\"this\":[\"wp\",\"apiFetch\"]}","webpack:///external {\"this\":[\"wp\",\"blocks\"]}","webpack:///external {\"this\":[\"wp\",\"element\"]}","webpack:///external {\"this\":[\"wp\",\"i18n\"]}"],"names":["Edit","attributes","setAttributes","categories","apiFetch","url","then","postTypes","length","updateCategory","event","selectedCategory","target","value","updatePostType","selectedPostType","updatePostsPerPage","postsPerPage","console","log","Object","values","map","postType","id","name","category","registerBlockType","title","__","description","icon","supports","html","type","edit","save"],"mappings":";;;;;;;;;;;;;;;;QAAA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA,QAAQ,oBAAoB;QAC5B;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA,iBAAiB,4BAA4B;QAC7C;QACA;QACA,kBAAkB,2BAA2B;QAC7C;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;;QAEA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;QAEA;QACA;QACA;QACA;QACA,gBAAgB,uBAAuB;QACvC;;;QAGA;QACA;QACA;QACA;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACe,SAASA,IAAT,OAA6C;AAAA,MAA7BC,UAA6B,QAA7BA,UAA6B;AAAA,MAAjBC,aAAiB,QAAjBA,aAAiB;;AAC3D,MAAI,CAACD,UAAU,CAACE,UAAhB,EAA4B;AAC3BC,+DAAQ,CAAC;AACRC,SAAG,EAAE;AADG,KAAD,CAAR,CAEGC,IAFH,CAE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","file":"index.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"index\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./src/index.js\",\"style-index\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\r\n * Retrieves the translation of text.\r\n *\r\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\r\n */\r\nimport { __ } from '@wordpress/i18n';\r\nimport apiFetch from '@wordpress/api-fetch';\r\n\r\n/**\r\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\r\n * Those files can contain any CSS code that gets applied to the editor.\r\n *\r\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\r\n */\r\nimport './editor.scss';\r\n\r\n/**\r\n * The edit function describes the structure of your block in the context of the\r\n * editor. This represents what the editor will render when the block is used.\r\n *\r\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\r\n *\r\n * @param {Object} [props]           Properties passed from the editor.\r\n * @param {string} [props.className] Class name generated for the block.\r\n *\r\n * @return {WPElement} Element to render.\r\n */\r\nexport default function Edit({ attributes, setAttributes }) {\r\n\tif (!attributes.categories) {\r\n\t\tapiFetch({\r\n\t\t\turl: './../wp-json/wp/v2/categories',\r\n\t\t}).then(categories => {\r\n\t\t\tsetAttributes({\r\n\t\t\t\tcategories : categories,\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\tif (!attributes.postTypes) {\r\n\t\tapiFetch({\r\n\t\t\turl: './../wp-json/wp/v2/types',\r\n\t\t}).then(postTypes => {\r\n\t\t\tsetAttributes({\r\n\t\t\t\tpostTypes : postTypes,\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\t/** If attributes have not been set yet, execute this */\r\n\tif (!attributes.categories) {\r\n\t\treturn 'Loading...';\r\n\t}\r\n\t/** If all categories have been deleted, don't blow up the site, run this code snippet */\r\n\tif (!attributes.categories && attributes.categories.length === 0) {\r\n\t\treturn 'No categories found';\r\n\t}\r\n\t\r\n\tfunction updateCategory(event) {\r\n\t\tsetAttributes({\r\n\t\t\tselectedCategory: event.target.value,\r\n\t\t});\r\n\t}\r\n\tfunction updatePostType(event) {\r\n\t\tsetAttributes({\r\n\t\t\tselectedPostType: event.target.value,\r\n\t\t});\r\n\t}\r\n\r\n\tfunction updatePostsPerPage(event) {\r\n\t\tsetAttributes({\r\n\t\t\tpostsPerPage: event.target.value,\r\n\t\t});\r\n\t}\r\n\tconsole.log(attributes.postTypes);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<label> Post Type </label>\r\n\t\t\t<select onChange={updatePostType} value={attributes.selectedPostType}>\r\n\t\t\t\t{\r\n\t\t\t\t\tObject.values(attributes.postTypes).map(postType => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<option value={postType.id} key={postType.id}>{postType.name}</option>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</select>\r\n\t\t\t<label> Project Category </label>\r\n\t\t\t<select onChange={updateCategory} value={attributes.selectedCategory}>\r\n\t\t\t\t{\r\n\t\t\t\t\tattributes.categories.map(category => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<option value={category.id} key={category.id}>{category.name}</option>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</select>\r\n\t\t\t<label> Posts per Page: </label>\r\n\t\t\t<input type=\"text\" onChange = {updatePostsPerPage} value={attributes.postsPerPage} />\r\n\t\t</div>\r\n\t)\r\n}\r\n","// extracted by mini-css-extract-plugin","/**\r\n * Registers a new block provided a unique name and an object defining its behavior.\r\n *\r\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\r\n */\r\nimport { registerBlockType } from '@wordpress/blocks';\r\n\r\n/**\r\n * Retrieves the translation of text.\r\n *\r\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\r\n */\r\nimport { __ } from '@wordpress/i18n';\r\n\r\n/**\r\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\r\n * All files containing `style` keyword are bundled together. The code used\r\n * gets applied both to the front of your site and to the editor.\r\n *\r\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\r\n */\r\nimport './style.scss';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport Edit from './edit';\r\nimport save from './save';\r\n\r\n/**\r\n * Every block starts by registering a new block type definition.\r\n *\r\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\r\n */\r\nregisterBlockType( 'create-block/dynamic-posts', {\r\n\t/**\r\n\t * This is the display title for your block, which can be translated with `i18n` functions.\r\n\t * The block inserter will show this name.\r\n\t */\r\n\ttitle: __( 'Dynamic Posts', 'dynamic-posts' ),\r\n\r\n\t/**\r\n\t * This is a short description for your block, can be translated with `i18n` functions.\r\n\t * It will be shown in the Block Tab in the Settings Sidebar.\r\n\t */\r\n\tdescription: __(\r\n\t\t'Example block written with ESNext standard and JSX support – build step required.',\r\n\t\t'dynamic-posts'\r\n\t),\r\n\r\n\t/**\r\n\t * Blocks are grouped into categories to help users browse and discover them.\r\n\t * The categories provided by core are `common`, `embed`, `formatting`, `layout` and `widgets`.\r\n\t */\r\n\tcategory: 'widgets',\r\n\r\n\t/**\r\n\t * An icon property should be specified to make it easier to identify a block.\r\n\t * These can be any of WordPress’ Dashicons, or a custom svg element.\r\n\t */\r\n\ticon: 'smiley',\r\n\r\n\t/**\r\n\t * Optional block extended support features.\r\n\t */\r\n\tsupports: {\r\n\t\t// Removes support for an HTML mode.\r\n\t\thtml: false,\r\n\t},\r\n\tattributes: {\r\n\t\tpostTypes: {\r\n\t\t\ttype: 'object',\r\n\t\t},\r\n\t\tselectedPostType: {\r\n\t\t\ttype: 'string',\r\n\t\t},\r\n\t\tcategories: {\r\n\t\t\ttype: 'object',\r\n\t\t},\r\n\t\tselectedCategory: {\r\n\t\t\ttype: 'string',\r\n\t\t},\r\n\t\tpostsPerPage : {\r\n\t\t\ttype: 'string',\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * @see ./edit.js\r\n\t */\r\n\tedit: Edit,\r\n\r\n\t/**\r\n\t * @see ./save.js\r\n\t */\r\n\tsave,\r\n} );\r\n","/**\r\n * Retrieves the translation of text.\r\n *\r\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\r\n */\r\nimport { __ } from '@wordpress/i18n';\r\n\r\n/**\r\n * The save function defines the way in which the different attributes should\r\n * be combined into the final markup, which is then serialized by the block\r\n * editor into `post_content`.\r\n *\r\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\r\n *\r\n * @return {WPElement} Element to render.\r\n */\r\nexport default function save() {\r\n\treturn null;\r\n}\r\n","(function() { module.exports = this[\"wp\"][\"apiFetch\"]; }());","(function() { module.exports = this[\"wp\"][\"blocks\"]; }());","(function() { module.exports = this[\"wp\"][\"element\"]; }());","(function() { module.exports = this[\"wp\"][\"i18n\"]; }());"],"sourceRoot":""}